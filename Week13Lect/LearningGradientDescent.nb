(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    243607,       5281]
NotebookOptionsPosition[    236154,       5148]
NotebookOutlinePosition[    236578,       5165]
CellTagsIndexPosition[    236535,       5162]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"resource", "=", 
   RowBox[{"ResourceObject", "[", "\"\<MNIST\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"resource", ",", "\"\<TrainingData\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"resource", ",", "\"\<TestData\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.830910688439836*^9, 3.830910688440918*^9}, {
  3.830914408824548*^9, 3.830914409126792*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"4c52db60-f8e3-4f66-8a75-37bf446158c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "trainingData", "]"}]], "Input",
 CellChangeTimes->{{3.830918999718601*^9, 3.830919002111671*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"38e56a37-e200-4e8c-9581-2c77f2d35616"],

Cell[BoxData["60000"], "Output",
 CellChangeTimes->{3.830919002459806*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"2299e852-7b75-41c1-ae8f-a285c90c77e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "testData", "]"}]], "Input",
 CellChangeTimes->{{3.830919003316349*^9, 3.830919008005516*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"948f266b-58ba-431f-8cef-e53d7cc8f9f7"],

Cell[BoxData["10000"], "Output",
 CellChangeTimes->{3.8309190084214153`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"c0bcc90c-2a3e-4cc7-b9a1-6395f3214524"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingData", "[", 
   RowBox[{"[", "22000", "]"}], "]"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"X", " ", "\[Rule]", " ", "Y"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.830918852890308*^9, 3.830918905957746*^9}, {
  3.830919057066925*^9, 3.830919097375148*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"ca24d20f-02c9-469f-94df-614113324573"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+soEtEJHnuXDURkSJ0mS2NHIxQwKKJKjWLCSphyMPImIUi9UgDKCyl
rL52/hIhRuZZKHK7+BhZTR4DGeeFGRll0e1rWw8kftd4MTKKXcDm0k+OIBtL
schsdZAAysgdf4EucbvOgBPszkoMPd8tYZ7L/IIhWcPIyCDKBZKsQxauzLvx
//+xie4TH27vBcqdQJI6ysVYA2V+rGdk1HyMJNfJyGgPYW1qA2pjPY0kZ8fI
yFG/OnWFgRInA1Cu7DuS3LNoRjhgsrd/iuLEVnaYFGs1hvvXmYkCgdv8+Ssx
pAYJAAC80HtT
     "], {{0, 28.}, {28., 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{28., 28.},
   PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "3"}]], "Output",
 CellChangeTimes->{{3.8309188578888607`*^9, 3.8309188619720087`*^9}, {
  3.830918900218357*^9, 3.830918906840249*^9}, {3.8309190656731358`*^9, 
  3.830919097984233*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"80a66348-9f04-47f5-a3b6-4016de6a19ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"trainingData", "[", 
   RowBox[{"[", "22000", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.830919194361847*^9, 3.830919195125326*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"ab473b4a-55d2-4dda-8c95-246c652ab434"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+soEtEJHnuXDURkSJ0mS2NHIxQwKKJKjWLCSphyMPImIUi9UgDKCyl
rL52/hIhRuZZKHK7+BhZTR4DGeeFGRll0e1rWw8kftd4MTKKXcDm0k+OIBtL
schsdZAAysgdf4EucbvOgBPszkoMPd8tYZ7L/IIhWcPIyCDKBZKsQxauzLvx
//+xie4TH27vBcqdQJI6ysVYA2V+rGdk1HyMJNfJyGgPYW1qA2pjPY0kZ8fI
yFG/OnWFgRInA1Cu7DuS3LNoRjhgsrd/iuLEVnaYFGs1hvvXmYkCgdv8+Ssx
pAYJAAC80HtT
     "], {{0, 28.}, {28., 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{28., 28.},
   PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "3"}]], "Output",
 CellChangeTimes->{3.830919195644058*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"4b104b88-d08b-4837-b843-a7ffc73c5cc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xim", " ", "=", " ", 
   RowBox[{"ImageData", "[", 
    RowBox[{"First", "[", "x", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"xim", "[", 
  RowBox[{"[", 
   RowBox[{"10", ",", "20"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixPlot", "[", "xim", "]"}]}], "Input",
 CellChangeTimes->{{3.830919197407344*^9, 3.8309192615207644`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"f6ab7308-e272-4167-8941-1940d70158a0"],

Cell[BoxData["0.07450980392156863`"], "Output",
 CellChangeTimes->{{3.8309192307584963`*^9, 3.8309192620124807`*^9}},
 CellLabel->
  "Out[104]=",ExpressionUUID->"ce052cc4-2eb3-484b-b38f-503cde54d957"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt2gswlXkfB/CDbEmU6ypWlKyIVS6l0ncthQ2d2q0VVkRySaRIqCjdRHLZ
yFq8lULlUpa0dJJIoqJoyeUcjut5ngebcuvyet9t35l3Z868Y0abnff5z5w5
5sOYc37Pd37n//ufR3mr14ZtQgwGQ+H9418//776wAmQzjTlNIDxX4t22mmn
nXbaaaeddtppp532j+UvIpbZub3i4R/Jq60cd3Nwedtbxcc39+HO3QjcCiXR
d156tMatBzlKu5lBuRwUfVd7yVOJwpfH9zIV8wg0dllHZWd2TpiHR+iwQ78k
4a0d+VTYtRuz32ZJ/qrRDGWr4KLNV3jY5KliWxnaii8fPYRh7CW+LrMkuzQk
iQexbO2K6xUcJG8nlQR5gZhs9af993XHPcwsaQEBVuuZaYpxXNSpSMhmaZch
xXxB5uFdFBZu6Qs/0kVijlFg+eUHPQiaG15ZnkBhNoPl7h9KIX9T1lkrR+Jv
4+dOz+3aG0ghjUi4ME+cQkn1K06IJg9+Mxpm+Iz9fqmDchUrsR2vfRjarOUP
6dz+RW7ZGPypXD2FPuPT4l9oNGFAxP6e7/ffY2Dn9pLbgwREfFRFZml1YcTD
JPmyfv2ky9WH9tJR75iBaAqGo3rDrS4UAvSKPWylx/r3EYHIEAcSkY7ZxVx2
N/yUrI3WM9l8XeX5/dVmtyn41846GmDXBNcXVy37arfQOf8fHp2uUL7RlYS7
i4FOwNtuZBut8TL5iT3u69i9YLpvlhsFS5vt8n0VJJrmRiTcONCDpGyxPWlf
EVA9uDBOQbYdhXJB9pc+rYBXi1ya2C0eDCzk3b+/zEFdG8t7SDkQhYo9TQce
ExB6aBy79VAnEpg/1XnH1OFgcEhZ6jEelj2oTf6aywGj4L78vEcHUH42iEw4
R2KHhfRXGQ09yKxpT3xb3wrXMLm1sa0k0jI3KbhW8hAo0zHjvlU7dAR7Vzx3
pLBrY3O6zVUSKW+TdpQu7vlPTv78PFE5L3rUbE4FEsgfmXsuelYHFNbOliK4
jxE0sH1oMLUXN1ol16vGPgfDQ6TuNWlE5/b9klKfMpIlRkDt60WknxYXdjWf
+vgO3xl3/fn1jcn2fjO6RJRD9AgMPptzKleXA3H787cK1fwhUFU6U0+BgF28
r+4rTy6YFpZn+om7H3z/YJ4Xc/J0MIlZ2mL2V5+1vO+rXpOubh/LjTZ/O79+
JgmD/pyOh7ZsiL7aXGFW4IOg5ieCU20oxDI3LiuNJOHUlL2qhtvNt/55O2We
TrMmUCvDGI7b3Y7ghJXZAoOVf5s6uxOa67817cXPBjFRi5iNWNSmetXHaQPf
/j/efBpF1Wh8kU9C5ohLvKcaD96nVZjGF9pwX9PRqTCFwryfVqz5/McmMAWW
HBPd7/i3qdvH8oeLPtN18yQQeqXORqq6HSYKbwTs6h6hXy81sfcCAbe27be4
JR24OtsyRf/iExTvTr9kPdYXNOzbld4WNcPVeqnD8zLXcdfZzUb0ZZoaCd+0
fvWFxmxkjpaqqcv7oKXE8FImd2xeceQ+Vglswx53h6zb5E1I1dcORywjobiw
usjHvBtUwlQh46gmvn/vr/GCpeBFYcntlXq33jShrCdE7OhLJ4SZROe7RhAI
u/eF5NYmNmTscgvDhnzh3L3/cvFLHqJyiqsflbah/N3KxL2hrAnrqwV2++LN
bEhQsruuN0mwMfRJUjvR7E3nc5I6vz483uv+x///8zO/c6rxfl5MlG+xqrki
YUHgxP2vPUzQDuN+NDvbPqDz+ZGd31zgZ5M7JcOfxOMIM0OtlT1IVnJfW2LI
mXRz/Xh96XB6vQeLQNd+l5j8pZ1YreEiX+JZO9bvLYWzD/biMLtzsy77OYae
GlWeizCn8zlJnVlVkpCiS8HBYZZc365m9Bimt/Y3u/DtM/zmd35z+sfKJ7/9
0mSrP+1/jWvFLaxtHMuDvcZqnxuv2Whr4eyILfbDgq0dG69ak7hm9zlzXUk3
9N+5SdkLsSFMsnRTx/bPHS+N7/F8CLzS7zXvfNcxYflkyFUfLe8j4WZpEiwt
SGA4NOiNc0M7om3vlPkbkcjZstjrsDr7/Xy0C2knuofPD1EwDdpmdYhoROHI
pU/WGdjQef4/9WiSO0/FoReaaZJzOIqN78951sFr1QOFeiaJuu+SmgtSuzH4
y2BF7Y6WD95v93ueP/TdEQLyq438bhp0wH7paE3F0Wo6n5PU+Z1PfhbZq2kw
c2zO2XQk+hcbDsw83PfnKOybsOu4akTn9WhNL6oyY97lLf9jn7yY73mair40
d5o6ie6GY34vRLrR20T0hcY1jjufU3Vv7jwrR8HpMNV8PJ5A4j13pyLHTugU
yTo6l5FIdBf74TeLFlhV3/V6YbuDzu0Eu1zSlYzs6wQumJWK2eazUWdFvvlh
ii/2MVtOKa6hEKfHEDlpQkKisEBUVZn/HM3v3Puu6PF9106R8FrMkvSO7IFd
DuW2Qbb1g583Ti/cEhk7tt9VfR0xY9WBFkiVEde04z2hniw6R1abwlDUCR3z
fgLfauiRZ8y6xp3b/BUEK3GIhOmGqv70uQQMLrprWH/eQedzgj1lUUYUcYxC
hlZhkU9lE2b8+3uBrRjKJZ2FWCR+O9ErIrSGh+wcyQP6/W0T9rkpdLF0JHsK
BRfXs1lWlgTWXtytLZHUgRyXNxK3G0hUpFdl1GTysHJgsLlWoB2Zv05LejbW
r6pO+QfGO/HQU8O4snAVF5XhIWFnm3hw7hKePjWcAyGH6NuUdQDf+6OmXCyu
uBHPw3r56ykvtVqhXeK8/IJ4Ajh3VL/pWUrh6RnJ1GZxEqct5suH/cA/tzN/
3WijdHJsfnx15ZilOQVD6SeGrvd42C5xZKS2jIenU+drJw+1gpG5NpzZdY3O
7QQ7vzrzu09jsp0j8XMJP8fcsgQSkaYnH0sX9WBnzuBO0YhWBMTVl0syKciW
ZCipuZO4aaG34PWh8Z+7+tm2pwjmEQjVWc2KFO+EIEJtuQ+e0vn8i3zqGR8h
sY0E5u0R1rKX4WBFg6/49S17YXq6wiJHn0DDkj0i9zlcBHsdDJ8eVM73fpXJ
ltvxunXucmWLwxRC++fL3tCgwHjBnekbwOP7/elku460/742hKN4zRQCd99N
n71OmIu64W9+y/+5GHsC+9hGahQUIhh3rj8hIDvdlHV+tJOvS0FT2K+RgNWc
YeW8vE4sS/0RcHwG/50lXOYNHlIK6rvmFrRi2p7iY9mCmXx92+v5zy4/JJER
I0BqhvCgPkDVK5zkjvv1eMzaFt8YM/Z6YsKKDPZ1wHpApv14cA2dQ9ppp512
2mmnnXbaaaed9o/s/wRmHG70
   "], {{0, 0}, {28, 28}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{27.5, 
       FormBox["1", TraditionalForm]}, {18.5, 
       FormBox["10", TraditionalForm]}, {8.5, 
       FormBox["20", TraditionalForm]}, {0.5, 
       FormBox["28", TraditionalForm]}}, {{27.5, 
       FormBox["1", TraditionalForm]}, {18.5, 
       FormBox["10", TraditionalForm]}, {8.5, 
       FormBox["20", TraditionalForm]}, {0.5, 
       FormBox["28", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {27.5, 
       FormBox["28", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {27.5, 
       FormBox["28", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.8309192307584963`*^9, 3.830919262071891*^9}},
 CellLabel->
  "Out[105]=",ExpressionUUID->"f485d7fe-2c2b-47c4-b9fc-5f1da900c70a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xim", " ", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.83091929087004*^9, 3.830919301478668*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"f8e61906-4813-4631-aef2-613bfde5302d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "0.5411764705882353`", "0.0784313725490196`", 
      "0.0784313725490196`", "0.38823529411764707`", "0.615686274509804`", 
      "0.615686274509804`", "0.14901960784313725`", "0.0784313725490196`", 
      "0.0784313725490196`", "0.4470588235294118`", "1.`", "1.`", "1.`", 
      "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "0.7058823529411765`", "0.5058823529411764`", 
      "0.03137254901960784`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.01568627450980392`", "0.1607843137254902`", "1.`", "1.`", "1.`", 
      "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "0.6039215686274509`", "0.00784313725490196`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.19215686274509805`", "0.047058823529411764`", "0.00392156862745098`",
       "0.00392156862745098`", "0.41568627450980394`", "1.`", "1.`", "1.`", 
      "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "0.8862745098039215`", "0.1568627450980392`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.10196078431372549`", 
      "0.13725490196078433`", "0.15294117647058825`", "0.6784313725490196`", 
      "0.6235294117647059`", "0.6431372549019608`", "0.07058823529411765`", 
      "0.00392156862745098`", "0.011764705882352941`", "0.6039215686274509`", 
      "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "0.7294117647058823`", "0.054901960784313725`", "0.00392156862745098`", 
      "0.0196078431372549`", "0.20392156862745098`", "0.8901960784313725`", 
      "1.`", "1.`", "1.`", "0.8117647058823529`", "0.07450980392156863`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.11372549019607843`", 
      "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "0.5254901960784314`", "0.6862745098039216`", "1.`", "1.`", 
      "1.`", "0.984313725490196`", "0.48627450980392156`", 
      "0.2901960784313726`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.08627450980392157`", "0.8156862745098039`", "1.`", "1.`", "1.`", 
      "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "0.9490196078431372`", 
      "0.2549019607843137`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.4588235294117647`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "0.7098039215686275`", "0.25098039215686274`", 
      "0.09411764705882353`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.11764705882352941`", "0.7803921568627451`", 
      "0.9098039215686274`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "0.8588235294117647`", "0.49411764705882355`", "0.18823529411764706`", 
      "0.03529411764705882`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.4745098039215686`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "0.9686274509803922`", "0.2235294117647059`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.4117647058823529`", "0.9568627450980393`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "0.48627450980392156`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.`", "0.08235294117647059`", "0.0392156862745098`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.49411764705882355`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "0.4745098039215686`", 
      "0.43137254901960786`", "0.8470588235294118`", "1.`", "1.`", 
      "0.7764705882352941`", "0.5686274509803921`", "0.2784313725490196`", 
      "0.5686274509803921`", "0.8823529411764706`", "0.7176470588235294`", 
      "0.5529411764705883`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.7843137254901961`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "0.7725490196078432`", 
      "0.0392156862745098`", "0.00392156862745098`", "0.48627450980392156`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "0.9450980392156862`", 
      "0.4980392156862745`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.1607843137254902`", "0.8901960784313725`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "0.5372549019607843`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.24705882352941178`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "0.6980392156862745`", 
      "0.5254901960784314`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.0196078431372549`", "0.796078431372549`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "0.24313725490196078`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.03137254901960784`", 
      "0.4980392156862745`", "0.6705882352941176`", "0.396078431372549`", 
      "0.6588235294117647`", "0.18823529411764706`", "0.13333333333333333`", 
      "0.03529411764705882`", "0.`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.4627450980392157`", 
      "0.9686274509803922`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "0.9019607843137255`", 
      "0.3568627450980392`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.00392156862745098`", 
      "0.00392156862745098`", "0.00392156862745098`", "0.00784313725490196`", 
      "0.24705882352941178`", "0.24705882352941178`", "0.8980392156862745`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "0.5215686274509804`", 
      "0.027450980392156862`", "0.00392156862745098`", "0.00392156862745098`",
       "0.00392156862745098`", "0.00392156862745098`", "0.00392156862745098`",
       "0.00392156862745098`", "0.00392156862745098`", "0.00392156862745098`",
       "0.0196078431372549`", "0.4823529411764706`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "0.6823529411764706`", 
      "0.21176470588235294`", "0.08235294117647059`", "0.08235294117647059`", 
      "0.08235294117647059`", "0.08235294117647059`", "0.27450980392156865`", 
      "0.6235294117647059`", "0.6235294117647059`", "0.6627450980392157`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", 
      "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`", "1.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.830919291790986*^9, 3.8309193023792152`*^9}},
 CellLabel->
  "Out[107]//MatrixForm=",ExpressionUUID->"5e502c01-da4a-401c-9b4e-\
17336af66cb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ximv", "  ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", "xim", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "ximv", "]"}]}], "Input",
 CellChangeTimes->{{3.8309193193485937`*^9, 3.8309193426609707`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"139fd5e2-b692-4fe7-8279-bb0ebbeecc31"],

Cell[BoxData["784"], "Output",
 CellChangeTimes->{3.830919343030037*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"1bae5534-56a1-49fe-9743-4938bc92fad1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "ximv", "]"}]], "Input",
 CellChangeTimes->{{3.830919370580968*^9, 3.830919383545826*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"a00193d3-1225-4e37-a991-9570674e7f76"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd2VtsLVUdx/EVfdmPo6LZKupojGmMMQOKVkX4e9/eB1AoCDjSw3FDbc+c
2tPu0ttq66WPIxy1ygEmhoc+8DDcjtWIWUYfGjVxIBGLAme81/skKhYf1Mw6
/8as7+/l5JN11v7Pfy5rLn3lTSeuvPk5xpjoucZ0/55Pe3n4r5HQPTiCL4D7
8IVwDL8KfjX8GngMfi38Ovj1cAJfBF8MvwF+I3wJ/Cb4zfA4/Bb4rfDb4Evh
t8OXwZfDEtrC5h0Yh807MQ6bd2EcNu/GOGzeg3HYvBfjsHkfxmEzwDhs3o9x
2HwA47D5IMZh8yGMw+bDGIfNRzAOm49iHDZpaIEt7GBzBebDFnawuRLzYQs7
2FyF+bCFHWw+hvmwhR1sPo75sIUdbK7GfNjCDjbXYD5sYQebCcyHLexgcy3m
wxZ2sLkO82ELO9h8AvNhCzvYXI/5sIUdbG7AfNjCDjY3Yj5sYQebT2I+bGEH
myx0DAucwRYuYQc3sPkU6sMCZ7CFS9jBDWxuQn1Y4Ay2cAk7uIHNJOrDMilX
+PxS60/KBT4PaX24nJQn9n20/qQ89GCXX2t92ByTF/h8X+sfC39P4OyY3HWm
y5Na/xj6hx3cwOZm9A8LnMEWLmEHN7A5jvqwwBlsj8tXv9Lld1r/uCQ+jdY/
LpFPqfWPnGv9T4eOYYEz2MIl7ODmyIXWH8qXT3f5gdYfon84gy1cwg5uYHNL
6BgWOIMtXMIObm6Rq3yOzv9bdX9YrX8r9j+cwRYuYQc3sJmSr2132dP6U9L3
2dH6U6gP2ym58+tdfq71p9A/3MDmM9j/sMAZbOESdnADm2nUh2Varvf5s9af
1vVIz1c7jf0PO7iZlpf4fFvrz8jtX+ryPa0/I6fv6KLroczI2Ye7/Fbrz8g/
/t5Fzx87o9fPb7T+jDzf5wGtP4P6M3p8t7T+ifB8jE+gfziDLVzCDm5gk4eO
4BhOYIFTOMvlGp/fn3eey4U+9+n25+H+KXI9vqe1n1yP1w/Pu8pl2UfPB4d6
NdzAbS7/frbLH7T/k3r/e1D7P4n1GE5Oyst8HtH+T6J/OINz2MIFXMIV7OAa
buAWNrOhIziGE1hm5dG6i97v0ll55p9djq4X/P8ctnAxK2s+f9P+Z+UVPue0
/1m54/Yuj2n/s+HxqeFmVl7kc1b7n9Xz6Y/a/2fRPxzDCSxwCmdwDlu4gEu4
gh1cww3cwmYudATHcALLnNzo81ftf05Sn1r7nwuPRw5buIDLObnB5yntH/Ud
XMMN3MLmFPqHYziBBU7hDM5hCxdwCVewg2u4OSXfPNtFn0/bU7p/9fiYeb0f
7Wr/81j/4ASWeXm5z3e1/3l59rDLgfY/r+vlX7T/efQPF3AJV7CDa7iBW9gs
hI7gGE5ggVM4g/MFWfL5k/a/IOU9XXR9Kxb0eOjzYLmgzxPf0P4X8HwD13AD
t7AZ6fX7tPY/Qv9wAgucwhmcwxYu4BKuYAfXcAO3sFkMHcHxovz3P110fUsW
9f33x9r/Yrg/UziDc9jCBVzCFewW5Tofff6vF+Weu7vo9jbop4XNbegfjuEE
FjiFMziHLVzAJVzBDq7hBm5vC58nzFK4PyM4XtL5mmRJXujzsPa/pM+r92r/
mJ/BOWzhYilcD8qj+kf9ww6u4QZuYbMcOoJjOIEFTuFsOVxf8mU5c2eXX2j/
y/JSH10PC8wv4WpZv2/p/cUty8U+v9L+l+WxR320f4y3y3Kpj74/mBX51zNd
9P4YrcgD93fR723xCu5/sMDpirzYR98vspVw+3PYwgVcwhXs4Bpu4BY2q6Gj
VfnWbhfdv/FqeH4nq+h/NbyeUvxeBuewhQu4hCvYrcplPrre1avSnPPR/rG9
LWzWwu9f0Vr4fhmvhfUSWOAUzuActnABl3AFO7hek4t89Pxt1tA/bKyuNz85
754Nfy+C+3AMj8EJPG7lah+93sSG748Di+sJnoAzG34vGFpZ9NHrL0f9EWzh
LbiAt+ES3oEreBd28J7V60mPR41+9+HmyPp9+cCG539r5ZSPvo8fWrnW5wk9
/ut6P9Px3nr4/Bmty/N89PtYfz18Ho3Xdfs1Y+tYL+FxWNbl7ru66PvdYD18
3kqPfl/3zwScwUM4h0ewhbfgAt6GS3hnXZ56souuH9W6/OxxHz3+6N/Be3AN
78MNfAC38CFsNkL3jqzfw6ONcH3ow/GGPPKdLtrv2Ea4PxJ4HBZ4AKfwBJzB
QziHR7CFt+BiQ+6vuuj6tL2h3y/P6PHH/tuBK3gXdvAeXMP7cLMRrn8HG3Lu
aR89/ujnEDaboXtwBPfhGB6DE3gcFngAp/AEnMFDOIdHm/L4T7voemc39fnz
R3r8N8Pn+wLehkt4Z1P/nqDPn9Vm+PeCXdhtyiU+uj172N4a3ocb+ABu4UPY
fC50D47gPhzDY3ACj8MCD+AUnoAzeAjn8Ai28BZcwNtwCe/AFbwLO3gPruF9
uIEP4BY+hM3nQ/fgCO7DMTwGJ/A4LPAATuEJOIOHcA6PYAtvwQW8DZfwDlzB
u7CD9+Aa3ocb+ABu4UPYfCF0D47gPhzDY3ACj8MCD+AUnoAzeAjn8Ai28BZc
wNtwCe/AFbwLO3gPruF9uIEP4BY+hM0XQ/fgCO7DMTwGJ/A4LPAATuEJOIOH
cA6PYAtvwQW8DZfwDlzBu7CD9+Aa3ocb+ABu4UPYbIXuwRHch2N4DE7gcVjg
AZzCE3AGD+EcHsH2//4fV94acw==
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 784.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.830919378299965*^9, 3.8309193839799137`*^9}},
 CellLabel->
  "Out[114]=",ExpressionUUID->"c74e9a38-65bb-46f9-8ad1-83391cb6843d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"28", "*", "28"}]], "Input",
 CellChangeTimes->{{3.830919173067691*^9, 3.830919175439293*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"98a31348-b0b6-4a34-a0d5-dc18cf48fe43"],

Cell[BoxData["784"], "Output",
 CellChangeTimes->{3.830919175737171*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"7e211b81-8a06-4957-a907-039ab179a09c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenet", "=", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"20", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", "Ramp", 
      ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"50", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", "Ramp", 
      ",", "\[IndentingNewLine]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", "\[IndentingNewLine]", "500", 
      ",", "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", "10", 
      ",", "\[IndentingNewLine]", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "9"}], "]"}]}], "}"}], "]"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"28", ",", "28"}], "}"}], ",", "\"\<Grayscale\>\""}], "}"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8309108877251673`*^9, 3.830910887726186*^9}, {
  3.8309191169092007`*^9, 3.8309191372030277`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"a1e2063f-5c0f-49a2-88be-e1a2adf1b2a8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                  BaseStyle -> GrayLevel[0.6]], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                  BaseStyle -> GrayLevel[0.6]], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{20, 1, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {24, 24}, "$WeightsInputChannels" -> 1], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{50, 20, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {8, 8}, "$WeightsInputChannels" -> 20], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 50, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{500, 800}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 500}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.1.4"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> 
                    Tooltip[{0, 1, 
                    Skeleton[7], 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}], 
                    "InputDepth" -> 1, "Dimensions" -> 10, "$Rank" -> 0, 
                    "$Version" -> "12.1.4"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[NeuralNetworks`Private`NetChain`part = 
                    MouseAnnotation[]], 
                    If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.830910892986774*^9, 3.830911479644408*^9, {3.830911522332802*^9, 
   3.830911534071068*^9}, 3.830914421822752*^9, 3.830917104358728*^9, 
   3.8309191402022753`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"e99596a9-5d07-4657-ab77-c710aa4f71bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NetTrain"}]], "Input",
 CellChangeTimes->{{3.830919487584437*^9, 3.8309194898412323`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"d7c71001-d76d-4b80-b163-a32a2443ab32"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/NetTrain",
              ButtonNote->"paclet:ref/NetTrain"],
             "\"paclet:ref/NetTrain\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NetTrain\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"net\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"input\\\", \\\"TI\\\"], StyleBox[\\\
\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", SubscriptBox[StyleBox[\\\"output\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"input\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"\[Rule]\\\", SubscriptBox[StyleBox[\\\"output\\\", \\\"TI\\\
\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
trains the specified neural net by giving the \\!\\(\\*SubscriptBox[StyleBox[\
\\\"input\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) as input and \
minimizing the discrepancy between the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"output\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) and the actual output of the net, using \
an automatically chosen loss function.\\n\\!\\(\\*RowBox[{\\\"NetTrain\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"net\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"\
\[LeftAssociation]\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"port\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", RowBox[{\\\"{\
\\\", RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], \
StyleBox[\\\"11\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"12\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"port\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\"}\\\"}]}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"\[RightAssociation]\\\"}]}], \
\\\"]\\\"}]\\) trains the specified net by supplying training data at the \
specified ports.\\n\\!\\(\\*RowBox[{\\\"NetTrain\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"net\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\\\\\\\"\\\
\\!\\\\(\\\\*StyleBox[\\\\\\\"dataset\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\
\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) trains on a named dataset \
from the Wolfram Data Repository.\\n\\!\\(\\*RowBox[{\\\"NetTrain\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"net\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) calls the function \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) during training to produce \
batches of training data.\\n\\!\\(\\*RowBox[{\\\"NetTrain\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"net\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"data\\\", \
\\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"prop\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) gives \
data associated with a specific property \\!\\(\\*StyleBox[\\\"prop\\\", \
\\\"TI\\\"]\\) of the training session.\\n\\!\\(\\*RowBox[{\\\"NetTrain\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"net\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", \\\"All\\\"}], \\\"]\\\"}]\\) \
gives a \\!\\(\\*RowBox[{\\\"NetTrainResultsObject\\\", \\\"[\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\"]\\\"}]\\) that summarizes \
information about the training session.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/NetTrain", 
                    "paclet:ref/NetTrain", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/NetTrain.html"]\
, None}, "http://reference.wolfram.com/language/ref/NetTrain.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"BatchSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LearningRate", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "LearningRateMultipliers", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LossFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MaxTrainingRounds", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PerformanceGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"RandomSeeding", "\[Rule]", "Inherited"}]},
                    {
                    RowBox[{"TargetDevice", "\[Rule]", "\<\"CPU\"\>"}]},
                    {
                    RowBox[{"TimeGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "TrainingProgressCheckpointing", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TrainingProgressFunction", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "TrainingProgressMeasurements", "\[Rule]", 
                    "Automatic"}]},
                    {
                    RowBox[{
                    "TrainingProgressReporting", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "TrainingStoppingCriterion", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "TrainingUpdateSchedule", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ValidationSet", "\[Rule]", "None"}]},
                    {
                    RowBox[{"WorkingPrecision", "\[Rule]", "Automatic"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "18", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"BatchSize", "\[Rule]", "Automatic"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "18", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`NetTrain\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/NetTrain",
              ButtonNote->"paclet:ref/NetTrain"],
             "\"paclet:ref/NetTrain\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NetTrain\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"net\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"input\\\", \\\"TI\\\"], StyleBox[\\\
\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", SubscriptBox[StyleBox[\\\"output\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"input\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"\[Rule]\\\", SubscriptBox[StyleBox[\\\"output\\\", \\\"TI\\\
\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
trains the specified neural net by giving the \\!\\(\\*SubscriptBox[StyleBox[\
\\\"input\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) as input and \
minimizing the discrepancy between the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"output\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) and the actual output of the net, using \
an automatically chosen loss function.\\n\\!\\(\\*RowBox[{\\\"NetTrain\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"net\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"\
\[LeftAssociation]\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"port\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", RowBox[{\\\"{\
\\\", RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], \
StyleBox[\\\"11\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"12\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"port\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\"}\\\"}]}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"\[RightAssociation]\\\"}]}], \
\\\"]\\\"}]\\) trains the specified net by supplying training data at the \
specified ports.\\n\\!\\(\\*RowBox[{\\\"NetTrain\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"net\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\\\\\\\"\\\
\\!\\\\(\\\\*StyleBox[\\\\\\\"dataset\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\
\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) trains on a named dataset \
from the Wolfram Data Repository.\\n\\!\\(\\*RowBox[{\\\"NetTrain\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"net\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) calls the function \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) during training to produce \
batches of training data.\\n\\!\\(\\*RowBox[{\\\"NetTrain\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"net\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"data\\\", \
\\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"prop\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) gives \
data associated with a specific property \\!\\(\\*StyleBox[\\\"prop\\\", \
\\\"TI\\\"]\\) of the training session.\\n\\!\\(\\*RowBox[{\\\"NetTrain\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"net\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", \\\"All\\\"}], \\\"]\\\"}]\\) \
gives a \\!\\(\\*RowBox[{\\\"NetTrainResultsObject\\\", \\\"[\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\"]\\\"}]\\) that summarizes \
information about the training session.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"NetTrain\", \"[\", RowBox[{StyleBox[\"net\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{RowBox[{SubscriptBox[StyleBox[\"input\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \"\[Rule]\", \
SubscriptBox[StyleBox[\"output\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \",\", \
RowBox[{SubscriptBox[StyleBox[\"input\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\"\[Rule]\", SubscriptBox[StyleBox[\"output\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
trains the specified neural net by giving the \
\!\(\*SubscriptBox[StyleBox[\"input\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) as \
input and minimizing the discrepancy between the \!\(\*SubscriptBox[StyleBox[\
\"output\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) and the actual output of the \
net, using an automatically chosen loss function.\n\
\!\(\*RowBox[{\"NetTrain\", \"[\", RowBox[{StyleBox[\"net\", \"TI\"], \",\", \
RowBox[{\"\[LeftAssociation]\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\"port\", \"TI\"], StyleBox[\"1\", \"TR\
\"]], \"\[Rule]\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"data\", \
\"TI\"], StyleBox[\"11\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"data\", \
\"TI\"], StyleBox[\"12\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"}\"}]}], \",\", RowBox[{SubscriptBox[StyleBox[\"port\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \"\[Rule]\", RowBox[{\"{\", \
StyleBox[\"\[Ellipsis]\", \"TR\"], \"}\"}]}], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"\[RightAssociation]\"}]}], \"]\"}]\) \
trains the specified net by supplying training data at the specified ports.\n\
\!\(\*RowBox[{\"NetTrain\", \"[\", RowBox[{StyleBox[\"net\", \"TI\"], \",\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"dataset\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True]}], \"]\"}]\) trains on a named dataset from the \
Wolfram Data Repository.\n\!\(\*RowBox[{\"NetTrain\", \"[\", \
RowBox[{StyleBox[\"net\", \"TI\"], \",\", StyleBox[\"f\", \"TI\"]}], \
\"]\"}]\) calls the function \!\(\*StyleBox[\"f\", \"TI\"]\) during training \
to produce batches of training data.\n\!\(\*RowBox[{\"NetTrain\", \"[\", \
RowBox[{StyleBox[\"net\", \"TI\"], \",\", StyleBox[\"data\", \"TI\"], \",\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"prop\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True]}], \"]\"}]\) gives data associated with a \
specific property \!\(\*StyleBox[\"prop\", \"TI\"]\) of the training session.\
\n\!\(\*RowBox[{\"NetTrain\", \"[\", RowBox[{StyleBox[\"net\", \"TI\"], \
\",\", StyleBox[\"data\", \"TI\"], \",\", \"All\"}], \"]\"}]\) gives a \
\!\(\*RowBox[{\"NetTrainResultsObject\", \"[\", StyleBox[\"\[Ellipsis]\", \
\"TR\"], \"]\"}]\) that summarizes information about the training session.", 
    "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/NetTrain", "Web" -> 
      "http://reference.wolfram.com/language/ref/NetTrain.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     BatchSize -> Automatic, LearningRate -> Automatic, 
      LearningRateMultipliers -> Automatic, LossFunction -> Automatic, 
      MaxTrainingRounds -> Automatic, Method -> Automatic, PerformanceGoal -> 
      Automatic, RandomSeeding -> Inherited, TargetDevice -> "CPU", TimeGoal -> 
      Automatic, TrainingProgressCheckpointing -> None, 
      TrainingProgressFunction -> None, TrainingProgressMeasurements -> 
      Automatic, TrainingProgressReporting -> Automatic, 
      TrainingStoppingCriterion -> None, TrainingUpdateSchedule -> Automatic, 
      ValidationSet -> None, WorkingPrecision -> Automatic}, 
    "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`NetTrain"], False]]], "Output",
 CellChangeTimes->{3.830919490457193*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"c0e1e138-27e9-4462-83c4-8fbb49255a95"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lenet", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"lenet", ",", "trainingData", ",", 
     RowBox[{"ValidationSet", "\[Rule]", "testData"}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "3"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.830910914037047*^9, 3.830910914038108*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"c85774e2-187c-404e-903e-931c82d1342e"],

Cell[CellGroupData[{

Cell[BoxData["lenet"], "Input",
 CellChangeTimes->{{3.830919607292061*^9, 3.830919608625338*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"ce9ef8e6-abe4-40a1-9fc0-2d282fa76f74"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {18., {0., 18.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {18., {0., 18.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {24, 24}, "$WeightsInputChannels" -> 1], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{50}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {8, 8}, "$WeightsInputChannels" -> 20], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 50, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{500, 800}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{500}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{10, 500}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{10}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.1.4"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> 
                    Tooltip[{0, 1, 
                    Skeleton[7], 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}], 
                    "InputDepth" -> 1, "Dimensions" -> 10, "$Rank" -> 0, 
                    "$Version" -> "12.1.4"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {
                    340., {140.2581787109375, 148.7418212890625}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.830919609064118*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"b8305065-6149-4f13-bf1d-5e55029ffdaf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"imgs", "=", 
   RowBox[{"Keys", "@", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"testData", ",", "30"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"Thread", "[", 
  RowBox[{"imgs", "\[Rule]", 
   RowBox[{"lenet", "[", "imgs", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.830911290267127*^9, 3.8309112902689447`*^9}, {
  3.8309115555144587`*^9, 3.830911555840434*^9}, {3.830917120545198*^9, 
  3.830917121391972*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"884f0ad9-97b0-480d-bdee-3f78357bccf6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9g8OuEmNlWHHIXmJmZJbFL/UjBLdcJlGKuwC5XCpL7glVqPwMTE1MZ
dm1OTEBt+7FKPRUGyqX9xCrnwgyUu4TdNnagXPlvrHLVTEwMBtgdckaamZmp
GrtcHNCNRs+wSn2zBcp1Y9fmRSBIvLFKvbMDek3kLVa5RSBv12O3DSRn8w27
3BleJonZ2KXoBgDaHcFY
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cl+LYqhZGRgdG2/DimnDUTE5MQEDOJNH9Hl+Nh91p7eW0lM1A2E12y
6wiYOhAIlGzGYe9jTyYm5584JA8BNb7DIXcevxz3exxyLUxM6TikzsnglssG
WncQu9QJYNiUoHjhfqoEEGT37TjDz8Qk/xBJ5k0KKxMEMLMwMUlcRJL608XE
xCMvL88LVSB74hdcbisTE/8GIL2GCQZqf8Pk3jIxmX/+f6/GBiTsBIorphkw
uc9KTEw6ZjIgMcUD/35ssWdiqoAbehpqlGTXSxD3W735E4RjroYzMbFUHPoE
E8CI+IEHAPhOgdM=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x96YDI/EPDxQ4DYFGSpLTrMQMDEDANwibvmWtzMyHLswXA5bYiIlpur
m1vBKSA4C5daysbMbLp3797HWJzRBtQjsQe7E0FyzOLxQDD3PbpcLwvMdUwG
c7+iSwrC5JiZg9F1/u+tqkpnYmJiYGLSWYbF1r+fXudZAfW6YXcU2FXY5S6s
i8WUczQHA0lwmGWiSHWyMSPcaf8RRU6cGSEXeRLVyMlwv8vOQff6/1lygkCQ
OnUqDufTBQAABSZpgA==
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "5"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/M4AqD3E0cUk+1mZgUb2CV+hvHBAThWOVug6SYlmOVUwZJmX3EJlXP
CJQS3oFNahkLSG4BVhMnMgHlor5ik7oqBZQL/45VWwoTE2PwL6xSlwQZGdlO
Y5X6kQB0RxxWqf9LQM7HLnXHCCg3EavUZwugVMBvrHLnmHBq+58DlKrE7v6P
pkC529i1vVJjYlJ7hV3ufz+T6kMcUlQFAFZowWs=
       "], {{0, 28.}, {28., 0}}, {0, 
       255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964MXv/z8ePVpcVFTEo6a2AUliZmioiG+oMxMTIxMYFyOk9ogwgMVc
wsPC1x3fyCR3BS71VIHJQZ3JZOPjn2Du741v4FJXGRkc/p+RfYbNFUVMTOqh
C47dxyZ3EmK/VMUeTLnfj4HglC8TI0fpARwePNPAxchY9xWH7LFgDsbgTzgk
/5cyMi3EJfdpOpMhTo2LGRk34pB6qsbE9Bi71B5dRqY5P7FKbVZgYkxHl9r2
G2SeESMjbwaGBsv6Y2vDuBmZ9I5gGhYPjlOuAmzO/1pvzKRRjDWSSAcAsJut
hQ==
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "5"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cl+HihW5AhZPFnLFIlWkxgoFOLITWfiSe8t7c3TZCJuew3mlxa5Hkw
fSOQiakCTe7HXxjDhUkMp5sqmASe45JbwcRUg0vuiyGTK05DPXHL/bDGLXef
Ca9cAy65CUyCr1EELoYJ6FVUVD0DMh2ZlFGkZrNIBwQEyDAJFN2dz8Y0F0XO
KuwdkHy3XYhJgIPJ4w+y1CftXgjjXRYwlqzvoHjJKA6s9td8cSYmNibpnmff
EJKBTNVA8qY7ExN354kmeSYmsYdwueOsgn3TgPHKpHUd5EM/puhv/wcZAAA5
xa0G
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8xYHOROhMTb9Gp3xgyn/J5mJiZmYF4BrrUYT1m5vDC48ePz2aWRpM6
w8esuRSs3ZaZeRaqXC+D3jMg9WIDIxMTUy+qXB9TyLFjx2pEQfYx96HKPVOH
uEOzI1wUXe7/4yignN+MD///W2HIIYAl0xlcUjdF/XBqO8ZcglNuCm659+pM
G3HJPWIWe4lbLhyndRuYO3HKFTEdxy2n+QannNQknFJn+C4g8QCqT8W/
       
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "9"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8OoN6hHgIYIKAeSY4BA+yHyznAxWBaHXBZsR9fWKFZSazcfhTHoIJ6
PPY54JFjIF+uHocUuc6sx2NmPR4zyXQmXjkHYlM6ANp0rQM=
       
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "7"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzFkcENwjAMRS1OHBkAH9iCHDlyLfIArSgVlyK5SIghMkgWySBZpHXaRkJx
uEKkRGlenP7/fWge1W0DAMNWlqp+nZjr92UnH9QP965vr+f+2XYtH5t4bb/O
8c/DORIVJmjiI0DrEBQ0UuHmHfoMIaBbtyGrM8BfZXz8hGymECg9iJhrTIwB
w5hpWcLloju5bzH2pixGjBfJGIuU54XEsAxYTbzEJZl4RKVDiux8aCB/1GOK
SzNMJ0E3B5aMgihVFqSjRGTKvjnaBsNFdz8bEz0UsbI=
       
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcE19BS6pk4pM/PYnsEr9FGJiYmI0fYlNbhuT7fZyRqZEbHKn4j79
/7+KjXE9Tvd4MOXjlMsjU86PCad9NYwJuKSuazBNQRN6fgsCNqsxej1HkxNl
AgUJhJCtnzRxEhDA5BiR5GAETI5B9Pb8GAZGRvZsTy8g0PcKX4VkpqAQUDUX
NIp+INt3TgJoCE/1ZaxuP5Of338Dl8cGOwAAyOCzuQ==
       
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x82wIHBoR7Cqq9nYNiPLAXkowAkqf0MDA4OOOTqQXL/94Oo+nqgonpU
uXrsHBDXAdlZKHLIAGT3fhxy6F5Ak8NlJAHrcEY3Hm3/GfA4Bb+RDrjk8Bi5
H482fB4HxTEujfjk0AAAsduvAg==
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "7"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9gcEfE9RMuuUWMjOtwyYXjlvuozKh8D4fcdEbGm7iM9GJk/YpDagMb
YwUOqTcqjPqfsUv97WVkLMKh7R0jo9oDHHIzGBmbcEhdEmTkeIVDro+RcQku
R6oyiuIKkjRGpmocUt/lGQVxSP3PY2RkLtyLXU6akZGR/RxWqaMcjIyeh7Fr
+ywuOuk3LvvoBACfhtzz
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/MwJJxFy6pmzzsx9HFqmdA6I1Mkhjq4xTeQWimWAy5WMYdYJqRsQ9T
H1MZRI7pAIZcKNN8EPWNkekghhwj0wYQ1cDIlLoIXY6BUWfBzvZQRhBAlwtj
YmJihGAVdLleXqgce+pNDAtv5seXdwgzMW7DkIGAh0KMbt9wyO1nYmrAIfU/
h4npHQ6pMxxMbri0LWDkOItLLg5L/CDkXHDKLRA+iVOOWgAA8RLDQA==
       
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+8YD6jxWdccrVM4m9xyTkxOeKSusTI1IBLbj0+OQbGebjkShjZruGQ
+izL6IVL22V2xkJccr1MjJ04pP4EMHK/xiF3nonJF5eRQLkCPHJ3cMnlMDHh
krrPyBiIU46JaT1uOaXvuOWccEn9/1tZjFOOagAA/onoNg==
       
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9O4Mb69euLGRkZGRgl129FlSozZkIAzrlIMrOEWIBCLA5gYM7ExLEN
LrWcEyhT3DcJwnvfp8y0ESa1i5+JSePuDxBzscrBl///O+rth8mtB+qS3P+p
GQjYmJjcXv1fgrANJMckbQBzyRVkN17QYkIGKHL/r/Rzc3PL7nLctYsdQw4B
gA42eIxbrhWHFD65OaxMimdxyFWzMJnjMhJopsx+MuwDykntwSH1mRO3fRFM
TFW45E6zMz3DJYcKAEqDkaE=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "9"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8osN1OVIyRiZHJ7gym3GJmJggU93iNJrVWVExUTFOrUIGRiWEJur6H
QPD16/9WoM6zuOwF6svAIbWWiVkMm75r29NBLr2GRSqGB+JSTLkvi0F6QDAG
Q64a5j9mnuvocgc9TExMYluA/mPsx+HO10CduPwQA9SHy++xmOHStxhCbwe6
0wQlrK+ZME0AM1rEgO5EjQZgQmNK609L1wTqEt2BaqIY3G9MzDVfUeWCgPog
YeJxCN1xX89miAP1aNfgjDm6AADMeYqL
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/C4Dh/K6bgl1cgco0gYymmXCvnfaAuAca8pxhSZxWMfvw/IcAY8g1D
6lU8Y9X/9waM8k8wTUxi5Lz8v4SRcQOGzL/ZjIzt/5fxMEb++f0HVep3EyMj
a8EEHkbGBl+hOhSpZzGMcMCsfh5Z6rUMI6NBVTQ3AyOjVPwOVBOfMXL3v///
VJ7R/dx7dIf8efwCSHYwct/AdD4YnGDFFlZg8FSR0esNDrmpjExrcEg9lmOM
xCH1LZhR5wMOuT2MglNwSH3VYOzDIfX/GV/oP1xyJAMAvjW96A==
       
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+E4NuaSCNGRgZGn+MYUpsUGZk07erbvVndf6DLHW//8OEXiNHE+hiX
0Y+kbXDI7EmUYErBKnNGmJGBQ5bR+Rum1FJBJiblXX8WSVdjyhkxy80FaWnm
eYQht2wthL7OOBOXS///143BLeet+hOnnA/TB6rLmfn+ReZ+aUSwpzLsQVH6
Qfw9jLlJJPg7ity/SNWbIJEvJwq5zJ+g2fFci1HR1tZWmEko/hmGA76tKTD3
NQ+d/hynE6kDAK3lz1A=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8PtkUXfXySI+3qKi+rqXKFIZPszMj+s1mJmZmK2tmEQPIGTerBJl
YmbuXiIWvjs83I+TiTkcIXcMqF6m5PF7sFlffVHkdjIx+S+H83oZmJgew42U
Y2buQ6gsBZoPl3vEzMwcbGV1BMy5ZMWJLgfk84PYn2xBbL8/MLlPtkxMjExM
THUnT9UbA2lGxWeo7mRGwm1IPl+AJrcaSS4MTc4dIfWIicnx/9O+Plk5uab/
x4D2WSHkvlozR6HYbY1qZsVjHHK7gHzRMkjQJAHZeUhyT/sEQf5jZIoqSgXS
vf9RwJY0JHf2ocr9/7EunAcm9+w/BthSDIx3R43oEkwp+gAAzJNFeg==
       
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8U4OgrNIHX//+/f3/ixIoTUxLdk1GlmiTV1KRlmJiYGIGYH0XqpxpU
mImRVyRmPYrcVCYmZSZG5YDY2O0P0K2PYWzA6bQYJtxyfEwivvX1V+5jk/ME
O4OJq/UnptyF5NjY2BhNJiYzXCa/7mFkNP2FQ/LPASHGZTgddZSRC8ODcMDB
tAXBefIDRW4Osk8ZGBk9Y6bCDZqDHEKVbCCv8YiIhOY17s7zQzHz/6kGK15I
FIAJ7beoDrhxstRJGBJ1HS+wOPDndhBATw70AwCcjqJY
       
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "5"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9k4Exb2zNccmLMzLz8/ClTpkye8gVdjp8ZCpiYpWRlZY0WLkPILeRm
dpaAyEEAqxZC8sKpLzdOlTupweSYmdGN/v1g794ebrCUPKajrs0LAtnNXnkT
TeLPk7lQM3XQZaYmwtwidQNNrgnhTrF2dDkmIGBggoApqHIPVPny8j59+nQi
CKhT8Ayq5NsXEPqHHVCyA9MPQPB0nQF2ud179liDXKO1HEnw3efrJ0/WuEL9
J3gWLgEMDUsnpLDmsrwHl0OEMBOfnJyc1UYkAzmZ+a2nVgmmTp065RC6C451
fMbqZJoAAFNOX/k=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/c4J2hMC6pNyYMXMewS70yY2QUwS710oKR0f8dVqkXtYyMDoexSm23
YmRU/oxV6pk6I6PAZuyWeTMyMs7CrquPm1Fw+XtsUs+tGRkZFmA3sAVoYCl2
158RYGScfAqr1Jt5XIxqV7CbGMzIaPUBu9R/J0bGVTik/gszMt7AIbWHg6MN
q8+AoJ9R+y0uI30YzXC55P8JrmRcUtQFAO3W13Y=
       "], {{0, 28.}, {28., 0}}, {0, 
       255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+C4OtmXQaGWqxS28x5rBRZjbFJ7Zetefj//1VZLFI3LdvAdMIlTDnX
yh9gelUdhtS1qg8QhoAmhhMd10AYa1gF0OUWmH6GMBI1MeR8EqAMhUAMOYGJ
EPohrzyGfQLrIXQ9A9cWDDNLwNRvO857GF5YL9T3DUiVM2ZiSP3/v1hV2qQg
bLrMBCxy/3+83/v+638DrHIQYNCPRw6fPnxyIb9xyi2Sv41bI7EAAJkd3wA=

       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "9"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YsLKakZGRQekOpswdfXYmMGhAl7m+WYsJCuQfoUpdkweJclhaWnIy
Kb5AkepUBsrI2W8DMhuYtFGk/vgD9XS9ATF/RjLVocgdZ2Jy3QlhBjIxbUGR
c2Li/wNhneRkkr2CImfPJABh1PEzyZ9DdeVexdlg+jvQxFB0390Ck1/zmJjE
9qPLQXQBpZgOoQlezgcDoIFMPj/R5ApgocXE2rQVVSqHhQkB2GNR5ESRpJhU
rmGVMxFiYnHo/Y9FTmvZxxNbtqG7HSQnNv8PVn9N6XbsvoBVhp4AADgefYs=

       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cl+OjCyMDIaJN5HovcNiYmPyYg4Gj+iiHXzXXx79evT3olmWwPocud
2wKlJZmEn+Cy+IMfUw1OVzUx6eCU28zEg1NuKabcl4mT/0DNRJP7eVOBiSn4
Cza5e0kCqWeKmSohcvHIUjcVlG7/+/9LiHn///+fJHi3IssVMzWDqGQmFxDh
imKkINMuEHWag6V3LhtLG4ocN9NrMB3KJM3GlPgfq9wcYEQYvECVC2SCRFsD
E5P4czR/31Hw7AECX04mJuF7aHL/Z8iC4pVJwpCJySX9DZrkpqysrJyLj7/H
MzHZfkDXOQgAABqQp8c=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0oJ6BoR63nAMefTi10UhuP045fOGLV448pzjgkSPTOnLl9pPpBXz6
8LqFSgAAqDzzew==
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4KYL11lccvOZ2PfhkNrOz1SCS5spE9MHHFLPGJnEv+OQs2Rk6sYh
9VuB0f43DrmNTIzhOKQ++jBxn8Qhd4mJSQmH1P/DDIz9OKT+eDExrcUh95mJ
SReXkZ1MTKtwybUyMd3DJafHZP8Dl5w4UzMuqRNcsk9xyS1j0sMl9f8sdxxO
OeoBAHyP5Mo=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+04Oq6eGeGCxjCf24uLJTlZgQCNLnfEZamjGDAqX7gC6rcV5Cwnq/v
qlVvMAycy8hY2vcFQxgMvBhZr+BynyWj4f9D/j4+3j4+XT9QpV5IMIpKszBC
XdPwDlmuDiTGLScnZ6YhJMLMaH0WSS4ZKGV8Gcx88jJbmFHjMULuJrPzagRv
lQhjDYL36wmK9T7IcqjgnyduuQuMOOUuyzIqvsAu9UmZkbENu9ROKUbG2Ado
gr8WHzt2rMucmZExCl3q/zsuYAAwMDKKnPmBLgV0XrKtbXxC20tczqcOAAC2
NqP9
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "5"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wcKmIj0G6aMknLFLtcszMTMzMzLZvMKT8QeJg3IoudVMIJF5c4sfM
ZI0ut5KJgWM2iJHBaPIDTW6vdeU+CIuJ+ThO5+KRO4NHTpZR8RkOqTcSmO6E
gRYsfoCCWZzMTPMxhR896ioyZmJi4u1+9AhV5lISPMyAeBaKFD8zshzHdCS5
JGYUOSYlhD+uAe1hBGL/m0DO00xWRib19zC5IrB6sbybEO4WaWbrbyhyobfg
5jw4jmBv0NAs2QhXOWAAAMDhi9g=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/8YK8zmsDJvAkQxusatyOoUt/0RB5DWNWMjqhSt11F1kBYDUxBz1Hl
UhlbIIyHMuzbUaXuy2mdh7CCWdrQHOLGOBfCiGBMR5P6qCp9C0S/bOVzv4Qm
901f6AmInsDIeAJN6v87Wcbuzvx0XTbOCd/R5X6uEWBmVS6zYuR/gC4FAjtP
/j/HyL8fmxQQfNVmLMMh9TuU0RvDMihYwciG4UYouKLN2YBD6n8+oxkuqfcy
jP645LwZdD/gkkvVm4ZLiooAAPWK0wk=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.830911292297826*^9, {3.830911507158471*^9, 3.830911556441538*^9}, 
   3.8309171221594353`*^9, 3.8309196445483217`*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"3e06aa96-a3ff-4c00-bf80-98e7ac37f591"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", " ", "NormalDistribution"}]], "Input",
 CellEvaluationLanguage->"Python",
 CellChangeTimes->{{3.8309185294709597`*^9, 3.830918534227048*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"417bde4b-33a7-4c78-a8be-e029c64d6b8b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/NormalDistribution",
              ButtonNote->"paclet:ref/NormalDistribution"],
             "\"paclet:ref/NormalDistribution\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NormalDistribution\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"\[Mu]\\\", \\\"TR\\\"], \\\",\\\", \
StyleBox[\\\"\[Sigma]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) represents a normal \
(Gaussian) distribution with mean \\!\\(\\*StyleBox[\\\"\[Mu]\\\", \
\\\"TR\\\"]\\) and standard deviation \\!\\(\\*StyleBox[\\\"\[Sigma]\\\", \
\\\"TR\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"NormalDistribution\\\", \\\"[\\\", \
\\\"]\\\"}]\\) represents a normal distribution with zero mean and unit \
standard deviation.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/NormalDistribution", 
                    "paclet:ref/NormalDistribution", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
NormalDistribution.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
NormalDistribution.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`NormalDistribution\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/NormalDistribution",
              ButtonNote->"paclet:ref/NormalDistribution"],
             "\"paclet:ref/NormalDistribution\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NormalDistribution\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"\[Mu]\\\", \\\"TR\\\"], \\\",\\\", \
StyleBox[\\\"\[Sigma]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) represents a normal \
(Gaussian) distribution with mean \\!\\(\\*StyleBox[\\\"\[Mu]\\\", \
\\\"TR\\\"]\\) and standard deviation \\!\\(\\*StyleBox[\\\"\[Sigma]\\\", \
\\\"TR\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"NormalDistribution\\\", \\\"[\\\", \
\\\"]\\\"}]\\) represents a normal distribution with zero mean and unit \
standard deviation.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"NormalDistribution\", \"[\", RowBox[{StyleBox[\"\[Mu]\", \
\"TR\"], \",\", StyleBox[\"\[Sigma]\", \"TR\"]}], \"]\"}]\) represents a \
normal (Gaussian) distribution with mean \!\(\*StyleBox[\"\[Mu]\", \"TR\"]\) \
and standard deviation \!\(\*StyleBox[\"\[Sigma]\", \"TR\"]\).\n\
\!\(\*RowBox[{\"NormalDistribution\", \"[\", \"]\"}]\) represents a normal \
distribution with zero mean and unit standard deviation.", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/NormalDistribution", "Web" -> 
      "http://reference.wolfram.com/language/ref/NormalDistribution.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`NormalDistribution"], False]]], "Output",
 CellChangeTimes->{3.830918534806923*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"20380d18-af79-4d26-bbcc-672b15f18f8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Pi]", ",", "30"}], "]"}]], "Input",
 CellChangeTimes->{{3.830918680776176*^9, 3.8309186851743727`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"02df1526-ca2b-4b14-a062-8ce0b70f2506"],

Cell[BoxData["3.1415926535897932384626433832795028841971693993751058151208`30.\
"], "Output",
 CellChangeTimes->{3.830918685631505*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"38e40d24-4254-4ce1-932f-2f95c97291d7"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xdata", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ydata", "=", 
   RowBox[{"{", 
    RowBox[{"1.1", ",", "1.9", ",", "3.3", ",", "4.2", ",", "5.7"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.83092171180443*^9, 3.830921731622518*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"16c501c6-28e6-4a81-b597-f418ba601891"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"xdata", ",", "ydata"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.83092176717275*^9, 3.830921786346589*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"949a85f0-323f-450d-bac3-ef1b0732754e"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 1.1}, {2., 1.9}, {3., 3.3}, {4., 4.2}, {5., 5.7}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.916666666666667, 5.}, {0, 5.7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.830921770526288*^9, 3.83092178678974*^9}},
 CellLabel->
  "Out[128]=",ExpressionUUID->"4d737ecf-6a64-4f5e-9b8d-f2b8b0967a86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"xdata", ",", "ydata"}], "]"}]], "Input",
 CellChangeTimes->{{3.8309217489960327`*^9, 3.830921753681959*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"6b7fd2f0-c977-4ed5-b01b-54541b7ec8be"],

Cell[BoxData[
 TemplateBox[{
  "ListPlot", "nonopt", 
   "\"Options expected (instead of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"1.1`\\\", \\\",\\\", \\\"1.9`\\\", \\\",\\\", \\\"3.3`\\\", \\\",\
\\\", \\\"4.2`\\\", \\\",\\\", \\\"5.7`\\\"}], \\\"}\\\"}]\\)) beyond \
position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1.1`\\\", \\\",\\\", \\\"1.9`\\\", \\\",\\\", \\\"3.3`\\\", \\\",\
\\\", \\\"4.2`\\\", \\\",\\\", \\\"5.7`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\). \
An option must be a rule or a list of rules.\"", 2, 123, 8, 
   19156433365891324761, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.830921754038418*^9},
 CellLabel->
  "During evaluation of \
In[123]:=",ExpressionUUID->"76cf0079-7d19-4b43-9b16-d4cdd51cb6dc"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "1.9`", ",", "3.3`", ",", "4.2`", ",", "5.7`"}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8309217540493593`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"6785e428-5485-4be8-a2d6-f510c4b67b4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.830921758956015*^9, 3.830921761393753*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"10e0417c-513e-468e-bf1b-50e436a9abe4"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ListPlot",
              ButtonNote->"paclet:ref/ListPlot"],
             "\"paclet:ref/ListPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots points \
\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \
\\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}]\\). \\n\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", RowBox[{\\\
\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots a list of \
points with specified \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\) coordinates. \\n\\!\\(\\*RowBox[{\
\\\"ListPlot\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots data from all the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\
\", RowBox[{StyleBox[\\\"w\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\
\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\"]\\\"}]\\) plots \\!\\(\\*SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) with features defined by the symbolic \
wrapper \\!\\(\\*StyleBox[\\\"w\\\", \\\"TI\\\"]\\). \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ListPlot", 
                    "paclet:ref/ListPlot", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ListPlot.html"]\
, None}, "http://reference.wolfram.com/language/ref/ListPlot.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", 
                    FractionBox["1", "GoldenRatio"]}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ClippingStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DataRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Filling", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FillingStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"InterpolationOrder", "\[Rule]", "None"}]},
                    {
                    RowBox[{"IntervalMarkers", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "IntervalMarkersStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Joined", "\[Rule]", "False"}]},
                    {
                    RowBox[{"LabelingFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelingSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"MaxPlotPoints", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshFunctions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"#1", "&"}], "}"}]}]},
                    {
                    RowBox[{"MeshShading", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLayout", "\[Rule]", "\<\"Overlaid\"\>"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotMarkers", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{
                    "PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ScalingFunctions", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "64", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "64", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ListPlot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ListPlot",
              ButtonNote->"paclet:ref/ListPlot"],
             "\"paclet:ref/ListPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots points \
\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \
\\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}]\\). \\n\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", RowBox[{\\\
\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots a list of \
points with specified \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\) coordinates. \\n\\!\\(\\*RowBox[{\
\\\"ListPlot\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots data from all the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\
\", RowBox[{StyleBox[\\\"w\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\
\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\"]\\\"}]\\) plots \\!\\(\\*SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) with features defined by the symbolic \
wrapper \\!\\(\\*StyleBox[\\\"w\\\", \\\"TI\\\"]\\). \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ListPlot\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) plots points \
\!\(\*RowBox[{RowBox[{\"{\", RowBox[{\"1\", \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{\"2\", \",\", SubscriptBox[StyleBox[\"y\", \"TI\
\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}]\). \n\!\(\*RowBox[{\"ListPlot\", \"[\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) plots \
a list of points with specified \!\(\*StyleBox[\"x\", \"TI\"]\) and \
\!\(\*StyleBox[\"y\", \"TI\"]\) coordinates. \n\!\(\*RowBox[{\"ListPlot\", \
\"[\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"data\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"data\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}], \"]\"}]\) plots data from all the \!\(\*SubscriptBox[StyleBox[\"data\
\", \"TI\"], StyleBox[\"i\", \"TI\"]]\).\n\!\(\*RowBox[{\"ListPlot\", \"[\", \
RowBox[{\"{\", RowBox[{StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
RowBox[{StyleBox[\"w\", \"TI\"], \"[\", \
RowBox[{SubscriptBox[StyleBox[\"data\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}], \",\", StyleBox[\"\
\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) plots \
\!\(\*SubscriptBox[StyleBox[\"data\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) \
with features defined by the symbolic wrapper \!\(\*StyleBox[\"w\", \
\"TI\"]\). ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ListPlot", "Web" -> 
      "http://reference.wolfram.com/language/ref/ListPlot.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     AlignmentPoint -> Center, AspectRatio -> GoldenRatio^(-1), Axes -> 
      Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, 
      Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, 
      ClippingStyle -> None, ColorFunction -> Automatic, ColorFunctionScaling -> 
      True, ColorOutput -> Automatic, ContentSelectable -> Automatic, 
      CoordinatesToolOptions -> Automatic, DataRange -> Automatic, 
      DisplayFunction :> $DisplayFunction, Epilog -> {}, Filling -> None, 
      FillingStyle -> Automatic, FormatType :> TraditionalForm, Frame -> 
      Automatic, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> 
      Automatic, FrameTicksStyle -> {}, GridLines -> None, 
      GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, 
      ImageSize -> Automatic, ImageSizeRaw -> Automatic, InterpolationOrder -> 
      None, IntervalMarkers -> Automatic, IntervalMarkersStyle -> Automatic, 
      Joined -> False, LabelingFunction -> Automatic, LabelingSize -> 
      Automatic, LabelStyle -> {}, MaxPlotPoints -> DirectedInfinity[1], Mesh -> 
      None, MeshFunctions -> {#& }, MeshShading -> None, MeshStyle -> 
      Automatic, Method -> Automatic, PerformanceGoal :> $PerformanceGoal, 
      PlotLabel -> None, PlotLabels -> None, PlotLayout -> "Overlaid", 
      PlotLegends -> None, PlotMarkers -> None, PlotRange -> Automatic, 
      PlotRangeClipping -> True, PlotRangePadding -> Automatic, PlotRegion -> 
      Automatic, PlotStyle -> Automatic, PlotTheme :> $PlotTheme, 
      PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, 
      ScalingFunctions -> None, TargetUnits -> Automatic, Ticks -> Automatic, 
      TicksStyle -> {}}, "Attributes" -> {Protected, ReadProtected}, 
    "FullName" -> "System`ListPlot"], False]]], "Output",
 CellChangeTimes->{3.830921761741214*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"b5e271a0-2b47-46b5-b546-90398ac769d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "=", 
  RowBox[{"Length", "[", "xdata", "]"}]}]], "Input",
 CellChangeTimes->{{3.8309218047316017`*^9, 3.830921814188588*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"13daafd0-c59e-40da-88ad-68f10235ec74"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.83092181456078*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"2165adf2-7af4-48fc-bd42-eae15b63825a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"xdata", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"A", " ", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.830921827774837*^9, 3.8309218780898447`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"68d60d74-71b4-44c4-b4ff-99af44a28b9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.830921860432918*^9, 3.8309218786037283`*^9}},
 CellLabel->
  "Out[132]=",ExpressionUUID->"4920a22e-97a7-4f79-a1dc-360c3189cada"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1"},
     {"1", "2"},
     {"1", "3"},
     {"1", "4"},
     {"1", "5"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.830921860432918*^9, 3.8309218786071997`*^9}},
 CellLabel->
  "Out[133]//MatrixForm=",ExpressionUUID->"5347cb99-7f98-493d-8505-\
105db76e0ae7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"grad", "[", "\[Beta]_", "]"}], ":=", 
  RowBox[{"2", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", "A", "]"}], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"A", ".", "\[Beta]"}], "-", "ydata"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8309218822039557`*^9, 3.83092193820683*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"7a5aa576-1b63-48da-b096-8018cefdd420"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grad", "[", 
  RowBox[{"{", 
   RowBox[{"10", ",", "13"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.830921942519763*^9, 3.830921965772197*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"ed77d872-77e3-4813-acdc-95c37c4035bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"457.6`", ",", "1609.8`"}], "}"}]], "Output",
 CellChangeTimes->{{3.830921950551147*^9, 3.8309219663689613`*^9}},
 CellLabel->
  "Out[137]=",ExpressionUUID->"69266c9a-09ee-4fbe-87c1-97e47ba69ff1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Eta]", "=", "0.001"}]], "Input",
 CellChangeTimes->{{3.83092204204177*^9, 3.8309220487629213`*^9}, {
  3.830922079969248*^9, 3.830922097075173*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"831fcc22-fac7-4ecf-ab96-22bcb8230ca4"],

Cell[BoxData["0.001`"], "Output",
 CellChangeTimes->{{3.8309220573637543`*^9, 3.830922097601762*^9}},
 CellLabel->
  "Out[152]=",ExpressionUUID->"a28ffeb1-b2ae-4bf8-8a50-01edc659afc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Beta]0", " ", "=", 
  RowBox[{"{", 
   RowBox[{"100", ",", "100"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Beta]1", " ", "=", " ", 
  RowBox[{"\[Beta]0", " ", "-", " ", 
   RowBox[{"\[Eta]", " ", 
    RowBox[{"grad", "[", "\[Beta]0", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Beta]2", " ", "=", " ", 
  RowBox[{"\[Beta]1", " ", "-", " ", 
   RowBox[{"\[Eta]", " ", 
    RowBox[{"grad", "[", "\[Beta]1", "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.8309219750301*^9, 3.830921984337727*^9}, {
  3.83092201970193*^9, 3.8309220747327642`*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"87357c28-a40d-4f78-ae8a-f70011c89292"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"100", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8309220239770927`*^9, {3.8309220547194557`*^9, 3.830922098676166*^9}},
 CellLabel->
  "Out[153]=",ExpressionUUID->"ec4809b5-9769-4a59-9dc4-6978158fcbd9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"96.0324`", ",", "86.1202`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8309220239770927`*^9, {3.8309220547194557`*^9, 3.8309220986788607`*^9}},
 CellLabel->
  "Out[154]=",ExpressionUUID->"89935b84-a177-4227-9af7-4d0f16ae3716"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"92.52087`", ",", "73.886206`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8309220239770927`*^9, {3.8309220547194557`*^9, 3.83092209868183*^9}},
 CellLabel->
  "Out[155]=",ExpressionUUID->"2959e399-0b69-4747-8cbe-f2c030e0f079"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "For"}]], "Input",
 CellChangeTimes->{{3.8309221040169687`*^9, 3.830922106354061*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"339ecb63-01b8-4d76-8c6c-f68b733c1513"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/For",
              ButtonNote->"paclet:ref/For"],
             "\"paclet:ref/For\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"For\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"start\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"incr\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"body\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
executes \\!\\(\\*StyleBox[\\\"start\\\", \\\"TI\\\"]\\), then repeatedly \
evaluates \\!\\(\\*StyleBox[\\\"body\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"incr\\\", \\\"TI\\\"]\\) until \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) fails to give True. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/For", 
                    "paclet:ref/For", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL["http://reference.wolfram.com/language/ref/For.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/For.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"HoldAll", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`For\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/For",
              ButtonNote->"paclet:ref/For"],
             "\"paclet:ref/For\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"For\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"start\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"incr\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"body\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
executes \\!\\(\\*StyleBox[\\\"start\\\", \\\"TI\\\"]\\), then repeatedly \
evaluates \\!\\(\\*StyleBox[\\\"body\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"incr\\\", \\\"TI\\\"]\\) until \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) fails to give True. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"For\", \"[\", RowBox[{StyleBox[\"start\", \"TI\"], \
\",\", StyleBox[\"test\", \"TI\"], \",\", StyleBox[\"incr\", \"TI\"], \",\", \
StyleBox[\"body\", \"TI\"]}], \"]\"}]\) executes \!\(\*StyleBox[\"start\", \
\"TI\"]\), then repeatedly evaluates \!\(\*StyleBox[\"body\", \"TI\"]\) and \
\!\(\*StyleBox[\"incr\", \"TI\"]\) until \!\(\*StyleBox[\"test\", \"TI\"]\) \
fails to give True. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/For", "Web" -> 
      "http://reference.wolfram.com/language/ref/For.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {HoldAll, Protected}, "FullName" -> 
    "System`For"], False]]], "Output",
 CellChangeTimes->{3.8309221070296783`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"3535dc7e-1034-457f-b394-7ed60295370c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", "[", 
  RowBox[{"grad", "[", "\[Beta]0", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.83092213783615*^9, 3.830922145698593*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"71da02d1-1c60-497e-a62a-263b2d4545af"],

Cell[BoxData["14435.743756384705`"], "Output",
 CellChangeTimes->{3.830922146275865*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"2feec35e-8ba2-4052-a317-7ac3de36a4a0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"\[Beta]", " ", "=", 
    RowBox[{"{", 
     RowBox[{"100", ",", "100"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Norm", "[", 
     RowBox[{"grad", "[", "\[Beta]", "]"}], "]"}], ">", " ", "0.1"}], ",", 
   ",", "\[IndentingNewLine]", 
   RowBox[{"\[Beta]", " ", "=", " ", 
    RowBox[{"\[Beta]", " ", "-", " ", 
     RowBox[{"\[Eta]", " ", 
      RowBox[{"grad", "[", "\[Beta]", "]"}]}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8309221094439573`*^9, 3.830922129486785*^9}, {
   3.830922192040427*^9, 3.8309222572620153`*^9}, 3.830922294946827*^9},
 CellLabel->
  "In[159]:=",ExpressionUUID->"b8aff35e-dcec-4401-9b86-e0218e133061"],

Cell[CellGroupData[{

Cell[BoxData["\[Beta]"], "Input",
 CellChangeTimes->{{3.830922299157275*^9, 3.830922299849646*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"3f5761ba-07c5-418d-af05-b16a620f9103"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.15300247924689336`"}], ",", "1.134212600709574`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.830922300394652*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"20e420c3-e70e-483a-b1cc-3a16f8b33c47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]", "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"\[Beta]", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "x"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.830922322717972*^9, 3.830922342368896*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"9fee4c95-9cb0-4d5e-aafd-d1ffe4922310"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVy38003scx/GxmWJp27fv7u26MXKpJbVT7qUTn3flyI06VzW66IfR7OZH
JW6ycqVcRkkSa4675teNbvPjLpfSplHkx+6pIV068uvqyq7QN4a47h+v8zrn
ec7Dhn9y/3FjEom0d2n/f34Cn8oNFbn3P1C9yr7ZoG7UsX382d8jhX2cOCeo
Qb34VHWJzf4BxWdxXSVrG9T59VetTdjn0KoTRZK8So06wi02ctpajDxXp/kX
tD9W6+aE2e+tb6G7Z3md5Sb1atOeAQe9dSkaE3bLb76rUctbZKffWdciTo2A
TT5UrFaUi3sinFqQsFAhb3JRojD0/NZYtA6ZtV889jC1GUUNrx9UKl4hZ+/0
9P1+S93mskOfyxt0qFRUVm7UgzLorRz5sUFUxA+1JeP9iN9zUE1u+xv56Q9f
HyCG0Oknl/knHUZRmjkzraTxLao8RTvw+bd6VJQaAyO+Y0guCh/d7P8euRnx
aP/i71GSbN73w9gEytN7vrQfmEAk3Ruoi59CtWtZI77FU8g+RhB3kEOgrd1a
05cZBBoicv3MH31EtnVHUqT+02jP8IkLWadnUKRV92c1nga0byhzg5XVLDrX
4qRvcpxDow38xOZ7c2imOMiGNTmPnBhda3Yd/YQ6F88IVK8XkBkignunFlCW
Bzd5/0ES7NYHTNvySCD0yu+b9DGCbk2oUYCjEVhNnA2i7TCG+6mNR9iEEWRw
Vcue2JFBYBL7Rqs1BkfuuUdllhQIiRbdp0nJcLlZJt9kbAKbwjZofYIpUEdx
vrNxyAT+ZDqax7qagB0J/XHoFRUeKpLyHMlU8LihJGxVpiAy4nzX9poKWcO/
bP+iehmY9cZ7RSlNQdM7XZxWuhyGS2yyZeeXwW/hde7SK2aQvW41pZa3HDS1
RF9XkjlkSgVNweylLpNWVAlpEJB9WEsbMQNPjqLQdM8KmPEoNshU5mAf87VM
7G4Bg8M74zQpNKjncVrKbFdCgRvXsj14BXiIniXM0+hwLzmWEbbRApJzt2w+
k0iHFF6IN5mwgG+ondElE3Rw7pWXprSvhMSOCtdTEQyQrM+71+5Nh5KonZLl
fQz4qf6qxLuWDnyhhcg1kAl7LXnFLXYMuKZkjH/VyYQdUU2BDPGSa2uZ7ffE
QPYl366NYICLhyptqwYDu4Zfc/YtueqUsCo/51WQuVHDeaFiQtEar3DnklUg
mKI8f8bBYD0WcqeMjQO/cpItvoZBeseWC+NZOEQkHZjfcx2DM6ZEjT4bh9gD
ype0GxgEbKv+8C4Hh1QiNiMzZ8nfdol4K8VB4WqYy83HoCncLbC/AAfD48Wu
krsYGJN3u+qqcMh8Qbva2IRBHDeAqH6Bg7QwUvjzMwyCQy259ztwKIzR7vJq
xWB3bm/E7104VLMyZ1u1GLA+HRkq/wuH3gBMqOvEQNkcorszgIPD4OpdA4MY
jB+NrJRO4rBZGW9VNIxBV5aTXvIBh23JPYbjIxionoyvy/2Ig49DfsU/oxhc
2RB9+8YsDtHhbKuJCQw40z9eu2LMgvPbLxqqpjBgclxa0ygsSF4x0BFDYGAI
MlDFVBZIygvTZ2YwaNaIEpLNWFCQSAl7MItBBbH9wSUaC+76Ht95fh6D3HUL
xEULFihtn65xX8AgIVDNTaSzQDVlb1hcxECQkRiZwGTBf3gTM5E=
       "]]},
     Annotation[#, "Charting`Private`Tag$84796#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5}, {-0.1530023635109137, 5.518060408564997}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.830922342734476*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"b71712bb-65b6-4820-acc6-098b48f6805f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"A", "=", "F"}]], "Input",
 CellChangeTimes->{{3.830921819090217*^9, 
  3.8309218245999327`*^9}},ExpressionUUID->"dd61e9ea-bb86-45da-ba07-\
ac9286b6685f"]
},
WindowSize->{1620, 855},
WindowMargins->{{31, Automatic}, {9, Automatic}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"324bc7d6-a6b3-49ba-b7ac-741267d20786"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 622, 14, 109, "Input",ExpressionUUID->"4c52db60-f8e3-4f66-8a75-37bf446158c2"],
Cell[CellGroupData[{
Cell[1205, 38, 215, 3, 46, "Input",ExpressionUUID->"38e56a37-e200-4e8c-9581-2c77f2d35616"],
Cell[1423, 43, 153, 2, 52, "Output",ExpressionUUID->"2299e852-7b75-41c1-ae8f-a285c90c77e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1613, 50, 211, 3, 46, "Input",ExpressionUUID->"948f266b-58ba-431f-8cef-e53d7cc8f9f7"],
Cell[1827, 55, 155, 2, 52, "Output",ExpressionUUID->"c0bcc90c-2a3e-4cc7-b9a1-6395f3214524"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2019, 62, 376, 8, 46, "Input",ExpressionUUID->"ca24d20f-02c9-469f-94df-614113324573"],
Cell[2398, 72, 1012, 21, 70, "Output",ExpressionUUID->"80a66348-9f04-47f5-a3b6-4016de6a19ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3447, 98, 261, 5, 46, "Input",ExpressionUUID->"ab473b4a-55d2-4dda-8c95-246c652ab434"],
Cell[3711, 105, 884, 19, 70, "Output",ExpressionUUID->"4b104b88-d08b-4837-b843-a7ffc73c5cc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4632, 129, 475, 11, 109, "Input",ExpressionUUID->"f6ab7308-e272-4167-8941-1940d70158a0"],
Cell[5110, 142, 200, 3, 52, "Output",ExpressionUUID->"ce052cc4-2eb3-484b-b38f-503cde54d957"],
Cell[5313, 147, 5030, 93, 565, "Output",ExpressionUUID->"f485d7fe-2c2b-47c4-b9fc-5f1da900c70a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10380, 245, 214, 4, 46, "Input",ExpressionUUID->"f8e61906-4813-4631-aef2-613bfde5302d"],
Cell[10597, 251, 10577, 160, 766, "Output",ExpressionUUID->"5e502c01-da4a-401c-9b4e-17336af66cb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21211, 416, 372, 9, 78, "Input",ExpressionUUID->"139fd5e2-b692-4fe7-8279-bb0ebbeecc31"],
Cell[21586, 427, 155, 3, 52, "Output",ExpressionUUID->"1bae5534-56a1-49fe-9743-4938bc92fad1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21778, 435, 213, 4, 46, "Input",ExpressionUUID->"a00193d3-1225-4e37-a991-9570674e7f76"],
Cell[21994, 441, 4304, 87, 359, "Output",ExpressionUUID->"c74e9a38-65bb-46f9-8ad1-83391cb6843d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26335, 533, 196, 3, 46, "Input",ExpressionUUID->"98a31348-b0b6-4a34-a0d5-dc18cf48fe43"],
Cell[26534, 538, 151, 2, 52, "Output",ExpressionUUID->"7e211b81-8a06-4957-a907-039ab179a09c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26722, 545, 1589, 35, 388, "Input",ExpressionUUID->"a1e2063f-5c0f-49a2-88be-e1a2adf1b2a8"],
Cell[28314, 582, 41802, 844, 91, "Output",ExpressionUUID->"e99596a9-5d07-4657-ab77-c710aa4f71bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70153, 1431, 202, 4, 46, "Input",ExpressionUUID->"d7c71001-d76d-4b80-b163-a32a2443ab32"],
Cell[70358, 1437, 27824, 564, 354, "Output",ExpressionUUID->"c0e1e138-27e9-4462-83c4-8fbb49255a95"]
}, Open  ]],
Cell[98197, 2004, 417, 10, 46, "Input",ExpressionUUID->"c85774e2-187c-404e-903e-931c82d1342e"],
Cell[CellGroupData[{
Cell[98639, 2018, 180, 3, 46, "Input",ExpressionUUID->"ce9ef8e6-abe4-40a1-9fc0-2d282fa76f74"],
Cell[98822, 2023, 41379, 834, 345, "Output",ExpressionUUID->"b8305065-6149-4f13-bf1d-5e55029ffdaf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140238, 2862, 536, 13, 78, "Input",ExpressionUUID->"884f0ad9-97b0-480d-bdee-3f78357bccf6"],
Cell[140777, 2877, 21510, 517, 176, "Output",ExpressionUUID->"3e06aa96-a3ff-4c00-bf80-98e7ac37f591"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162324, 3399, 248, 4, 46, "Input",ExpressionUUID->"417bde4b-33a7-4c78-a8be-e029c64d6b8b"],
Cell[162575, 3405, 13268, 310, 176, "Output",ExpressionUUID->"20380d18-af79-4d26-bbcc-672b15f18f8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175880, 3720, 229, 4, 46, "Input",ExpressionUUID->"02df1526-ca2b-4b14-a062-8ce0b70f2506"],
Cell[176112, 3726, 214, 3, 52, "Output",ExpressionUUID->"38e40d24-4254-4ce1-932f-2f95c97291d7"]
}, Open  ]],
Cell[176341, 3732, 467, 13, 78, "Input",ExpressionUUID->"16c501c6-28e6-4a81-b597-f418ba601891"],
Cell[CellGroupData[{
Cell[176833, 3749, 302, 7, 46, "Input",ExpressionUUID->"949a85f0-323f-450d-bac3-ef1b0732754e"],
Cell[177138, 3758, 1587, 41, 382, "Output",ExpressionUUID->"4d737ecf-6a64-4f5e-9b8d-f2b8b0967a86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178762, 3804, 243, 5, 46, "Input",ExpressionUUID->"6b7fd2f0-c977-4ed5-b01b-54541b7ec8be"],
Cell[179008, 3811, 990, 18, 34, "Message",ExpressionUUID->"76cf0079-7d19-4b43-9b16-d4cdd51cb6dc"],
Cell[180001, 3831, 390, 10, 52, "Output",ExpressionUUID->"6785e428-5485-4be8-a2d6-f510c4b67b4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180428, 3846, 200, 4, 46, "Input",ExpressionUUID->"10e0417c-513e-468e-bf1b-50e436a9abe4"],
Cell[180631, 3852, 31263, 652, 246, "Output",ExpressionUUID->"b5e271a0-2b47-46b5-b546-90398ac769d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211931, 4509, 237, 5, 46, "Input",ExpressionUUID->"13daafd0-c59e-40da-88ad-68f10235ec74"],
Cell[212171, 4516, 152, 3, 52, "Output",ExpressionUUID->"2165adf2-7af4-48fc-bd42-eae15b63825a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212360, 4524, 538, 15, 78, "Input",ExpressionUUID->"68d60d74-71b4-44c4-b4ff-99af44a28b9f"],
Cell[212901, 4541, 499, 15, 52, "Output",ExpressionUUID->"4920a22e-97a7-4f79-a1dc-360c3189cada"],
Cell[213403, 4558, 698, 22, 168, "Output",ExpressionUUID->"5347cb99-7f98-493d-8505-105db76e0ae7"]
}, Open  ]],
Cell[214116, 4583, 411, 11, 46, "Input",ExpressionUUID->"7a5aa576-1b63-48da-b096-8018cefdd420"],
Cell[CellGroupData[{
Cell[214552, 4598, 255, 6, 46, "Input",ExpressionUUID->"ed77d872-77e3-4813-acdc-95c37c4035bf"],
Cell[214810, 4606, 235, 5, 52, "Output",ExpressionUUID->"69266c9a-09ee-4fbe-87c1-97e47ba69ff1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215082, 4616, 257, 5, 46, "Input",ExpressionUUID->"831fcc22-fac7-4ecf-ab96-22bcb8230ca4"],
Cell[215342, 4623, 184, 3, 52, "Output",ExpressionUUID->"a28ffeb1-b2ae-4bf8-8a50-01edc659afc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215563, 4631, 663, 15, 109, "Input",ExpressionUUID->"87357c28-a40d-4f78-ae8a-f70011c89292"],
Cell[216229, 4648, 255, 6, 52, "Output",ExpressionUUID->"ec4809b5-9769-4a59-9dc4-6978158fcbd9"],
Cell[216487, 4656, 267, 6, 52, "Output",ExpressionUUID->"89935b84-a177-4227-9af7-4d0f16ae3716"],
Cell[216757, 4664, 267, 6, 52, "Output",ExpressionUUID->"2959e399-0b69-4747-8cbe-f2c030e0f079"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217061, 4675, 197, 4, 46, "Input",ExpressionUUID->"339ecb63-01b8-4d76-8c6c-f68b733c1513"],
Cell[217261, 4681, 13052, 310, 141, "Output",ExpressionUUID->"3535dc7e-1034-457f-b394-7ed60295370c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230350, 4996, 243, 5, 46, "Input",ExpressionUUID->"71da02d1-1c60-497e-a62a-263b2d4545af"],
Cell[230596, 5003, 171, 3, 52, "Output",ExpressionUUID->"2feec35e-8ba2-4052-a317-7ac3de36a4a0"]
}, Open  ]],
Cell[230782, 5009, 742, 18, 140, "Input",ExpressionUUID->"b8aff35e-dcec-4401-9b86-e0218e133061"],
Cell[CellGroupData[{
Cell[231549, 5031, 182, 3, 46, "Input",ExpressionUUID->"3f5761ba-07c5-418d-af05-b16a620f9103"],
Cell[231734, 5036, 256, 7, 52, "Output",ExpressionUUID->"20e420c3-e70e-483a-b1cc-3a16f8b33c47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232027, 5048, 468, 13, 46, "Input",ExpressionUUID->"9fee4c95-9cb0-4d5e-aafd-d1ffe4922310"],
Cell[232498, 5063, 3460, 76, 360, "Output",ExpressionUUID->"b71712bb-65b6-4820-acc6-098b48f6805f"]
}, Open  ]],
Cell[235973, 5142, 177, 4, 46, "Input",ExpressionUUID->"dd61e9ea-bb86-45da-ba07-ac9286b6685f"]
}
]
*)

